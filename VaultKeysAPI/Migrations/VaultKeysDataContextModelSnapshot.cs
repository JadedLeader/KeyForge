// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VaultKeysAPI.DataContext;

#nullable disable

namespace VaultKeysAPI.Migrations
{
    [DbContext(typeof(VaultKeysDataContext))]
    partial class VaultKeysDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VaultKeysAPI.DataModel.AccountDataModel", b =>
                {
                    b.Property<Guid>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AccountCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("AuthorisationLevel")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("VaultKeysAPI.DataModel.AuthDataModel", b =>
                {
                    b.Property<Guid>("AuthKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LongLivedKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortLivedKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthKey");

                    b.HasIndex("AccountId");

                    b.ToTable("Auth");
                });

            modelBuilder.Entity("VaultKeysAPI.DataModel.VaultDataModel", b =>
                {
                    b.Property<Guid>("VaultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("VaultCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("VaultName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VaultType")
                        .HasColumnType("int");

                    b.HasKey("VaultId");

                    b.HasIndex("AccountId");

                    b.ToTable("Vault");
                });

            modelBuilder.Entity("VaultKeysAPI.DataModel.VaultKeysDataModel", b =>
                {
                    b.Property<Guid>("VaultKeyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HashedVaultKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VaultId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("VaultKeyId");

                    b.HasIndex("VaultId");

                    b.ToTable("VaultKeys");
                });

            modelBuilder.Entity("VaultKeysAPI.DataModel.AuthDataModel", b =>
                {
                    b.HasOne("VaultKeysAPI.DataModel.AccountDataModel", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("VaultKeysAPI.DataModel.VaultDataModel", b =>
                {
                    b.HasOne("VaultKeysAPI.DataModel.AccountDataModel", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("VaultKeysAPI.DataModel.VaultKeysDataModel", b =>
                {
                    b.HasOne("VaultKeysAPI.DataModel.VaultDataModel", "Vault")
                        .WithMany()
                        .HasForeignKey("VaultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vault");
                });
#pragma warning restore 612, 618
        }
    }
}
